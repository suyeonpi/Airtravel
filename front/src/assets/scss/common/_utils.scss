//float 사용 시, 그 부모 요소에 clear-fix 클래스 추가
.clear-fix {
  &::after {
    display: block;
    content: "";
    clear: both;
  }
}

.divider {
  height: 0.2rem;
  background-color: #dbdbdb;
}

.btn {
  font-size: 1.6rem;
  font-weight: 700;
  cursor: pointer;
  border-radius: 0.8rem;

  &__primary {
    background-color: var(--main-blue-color);
    border: 3px solid var(--main-blue-color);
    color: #fff;
  }
  &__primary-outline {
    &:hover {
      transition: 0.3s;
      color: #fff;
      background-color: var(--main-blue-color);
    }
    background-color: #fff;
    border-style: solid;
    border-color: var(--main-blue-color);
    color: var(--main-blue-color);
  }
  &__light {
    background-color: #fff;
    border: 2px solid #191919;
    color: #191919;
  }
  &__large {
    width: 38.6666rem;
    height: 5.0666rem;
    line-height: 3.6rem;
  }
  &__medium {
    width: 38.6666rem;
    height: 5.0666rem;
  }
  &__small {
    border-width: 2px;
    width: 9.0666rem;
    height: 4rem;
  }
}

@mixin after($dis) {
  &::after {
    display: $dis;
    content: "";
    @content;
  }
}

@mixin setPosition($pos, $top, $right, $bottom, $left) {
  position: $pos;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

// flex 정중앙 정렬
@mixin setFlex($display: inline-flex, $justify: center, $align: center) {
  display: $display;
  justify-content: $justify;
  align-items: $align;
}

@mixin ellipsis($line, $height: 3em) {
  display: -webkit-box;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-line-clamp: $line;
  -webkit-box-orient: vertical;
  height: $height;
}

//이미지 bacseUrl
@function imgUrl($filename) {
  @return url("../images/#{$filename}");
}
